module(
    name = "hirschgarten",
)

http_jar = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_jar")

bazel_dep(name = "rules_kotlin", version = "2.1.0")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "ape", version = "1.0.1")
bazel_dep(name = "rules_shell", version = "0.5.0")

cosmos = use_extension("@ape//ape/cosmos:defs.bzl", "ape_cosmos")
use_repo(cosmos, "curl", "sha1sum", "sha256sum", "sha512sum", "md5sum")

register_toolchains(
    "//:kotlin_toolchain",
)

# Required by rules_jvm_external since version 6.3
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "rules_java", version = "8.8.0")
bazel_dep(name = "rules_jvm_external", version = "6.7")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "com.google.protobuf:protobuf-java:4.29.3",
        "ch.epfl.scala:bsp4j:2.2.0-M2",
        "com.fasterxml.jackson.core:jackson-databind:2.18.2",
        "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.2",
        "com.fasterxml.jackson.module:jackson-module-kotlin:2.18.2",
        "com.google.code.gson:gson:2.12.1",
        "com.google.guava:guava:31.0.1-jre",
        "commons-cli:commons-cli:jar:1.9.0",
        "commons-io:commons-io:jar:2.18.0",
        "io.grpc:grpc-protobuf:1.70.0",
        "io.grpc:grpc-stub:1.70.0",
        "io.kotest:kotest-assertions-api-jvm:5.9.1",
        "io.kotest:kotest-assertions-core-jvm:5.9.1",
        "io.kotest:kotest-assertions-shared-jvm:5.9.1",
        "io.kotest:kotest-common-jvm:5.9.1",
        "io.opentelemetry.semconv:opentelemetry-semconv:1.30.0-rc.1",
        "io.opentelemetry:opentelemetry-api:1.47.0",
        "io.opentelemetry:opentelemetry-exporter-otlp:1.47.0",
        "io.opentelemetry:opentelemetry-extension-kotlin:1.47.0",
        "io.opentelemetry:opentelemetry-sdk-trace:1.47.0",
        "io.opentelemetry:opentelemetry-sdk:1.47.0",
        "net.java.dev.jna:jna:5.16.0",
        "org.apache.httpcomponents:httpclient:4.5.14",
        "org.apache.logging.log4j:log4j-api:2.24.3",
        "org.apache.logging.log4j:log4j-core:2.24.3",
        "org.apache.velocity:velocity-engine-core:2.4.1",
        "org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:0.24.0",
        "org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.0",
        "org.junit.jupiter:junit-jupiter:5.11.4",
        "org.junit.platform:junit-platform-console:1.11.4",
        "org.junit.platform:junit-platform-suite-api:1.11.4",
        "org.junit.platform:junit-platform-suite-engine:1.11.4",
        "org.kodein.di:kodein-di:7.25.0",
        "org.scala-lang:scala-library:2.13.16",
        # for gpg signing
        "org.bouncycastle:bcprov-jdk15on:1.68",
        "org.bouncycastle:bcpg-jdk15on:1.68",
    ],
    fail_if_repin_required = True,
    generate_compat_repositories = True,
    lock_file = "//:maven_install.json",
    repositories = [
        "https://cache-redirector.jetbrains.com/maven-central",
        "https://cache-redirector.jetbrains.com/intellij-dependencies",
        "https://www.jetbrains.com/intellij-repository/releases",
        "https://www.jetbrains.com/intellij-repository/snapshots",
    ],
)
maven.artifact(
    artifact = "kotlinx-coroutines-core",
    group = "org.jetbrains.kotlinx",
    neverlink = True,
    version = "1.10.1",
)
maven.artifact(
    artifact = "kotlinx-coroutines-core-jvm",
    group = "org.jetbrains.kotlinx",
    neverlink = True,
    version = "1.10.1",
)
maven.artifact(
    name = "server_maven",
    artifact = "kotlinx-coroutines-core",
    group = "org.jetbrains.kotlinx",
    version = "1.9.0",
)
maven.artifact(
    name = "server_maven",
    artifact = "kotlinx-coroutines-core-jvm",
    group = "org.jetbrains.kotlinx",
    version = "1.9.0",
)
maven.artifact(
    name = "server_maven",
    artifact = "kotlinx-coroutines-test",
    group = "org.jetbrains.kotlinx",
    version = "1.9.0",
)
use_repo(
    maven,
    "maven",
    "server_maven",
    # TODO: also should not be required
    jna = "net_java_dev_jna_jna",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "googleapis", version = "0.0.0-20240819-fe8ba054a")
bazel_dep(name = "aspect_bazel_lib", version = "2.13.0")

switched_rules = use_extension("@googleapis//:extensions.bzl", "switched_rules")
switched_rules.use_languages(
    grpc = True,
    java = True,
)

bazel_dep(name = "rules_apple", version = "3.17.1")

# Needed because googleapis transitively pulls in a broken version
single_version_override(
    module_name = "rules_apple",
    version = "3.17.1",
)

bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "protobuf", version = "29.3")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_python", version = "1.1.0")
bazel_dep(name = "platforms", version = "0.0.11")

single_version_override(
    module_name = "grpc-java",
    patch_strip = 1,
    patches = [
        ":third_party/patches/grpc_java_missing_deps.patch",
    ],
    version = "1.66.0",
)

# Needed for codecanvas
python = use_extension("@rules_python//python/extensions:python.bzl", "python", dev_dependency = True)
python.toolchain(
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.12",
)

bazel_dep(
    name = "aspect_rules_lint",
    dev_dependency = True,
)
single_version_override(
    module_name = "aspect_rules_lint",
    patch_strip = 1,
    patches = [
        "tools/format/use-ktlint.patch",
    ],
    version = "1.0.9",
)

http_jar(
    name = "ktlint",
    integrity = "sha256-LruKLIsQYRmvgU6GOKZCRcrx3klAB7SLYRfMDoieqD4=",
    url = "https://github.com/pinterest/ktlint/releases/download/1.4.1/ktlint",
)

http_jar(
    name = "google_java_format",
    integrity = "sha256-gS+AX1gRJGDt8BvyAqjmHQ/R81wNT6vVQiBkB3bsV6E=",
    url = "https://github.com/google/google-java-format/releases/download/v1.24.0/google-java-format-1.24.0-all-deps.jar",
)

bazel_dep(
    name = "buildifier_prebuilt",
    version = "8.0.1",
    dev_dependency = True,
)
bazel_dep(
    name = "rules_buf",
    version = "0.3.0",
    dev_dependency = True,
)

buf = use_extension("@rules_buf//buf:extensions.bzl", "buf")
use_repo(buf, "rules_buf_toolchains")

bazel_dep(
    name = "rules_bazel_integration_test",
    version = "0.31.0",
    dev_dependency = True,
)

bazel_binaries = use_extension(
    "@rules_bazel_integration_test//:extensions.bzl",
    "bazel_binaries",
    dev_dependency = True,
)

# test project are too old for bazel 7
# bazel_binaries.download(version_file = "//:.bazelversion")
bazel_binaries.download(version = "8.2.1")
bazel_binaries.download(version = "7.6.1")
bazel_binaries.download(version = "6.4.0")
use_repo(
    bazel_binaries,
    "bazel_binaries",
    "bazel_binaries_bazelisk",
    "build_bazel_bazel_6_4_0",
    "build_bazel_bazel_7_6_1",
    "build_bazel_bazel_8_2_1",
)
